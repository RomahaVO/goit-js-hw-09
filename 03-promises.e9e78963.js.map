{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAwB/B,SAASC,EAAcC,EAAUC,GAW/B,OAVU,IAAIC,SAAQ,CAACC,EAASC,IAC9BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,I,CA7BPN,EAAKC,KAAKY,iBAAiB,UAE3B,SAA8BC,GAC5BA,EAAEC,iBACF,MAAMC,EAAOC,OAAOjB,EAAKC,KAAKiB,SAASF,KAAKG,OAC5CC,QAAQC,IAAIL,GACZ,IAAIM,EAAQL,OAAOjB,EAAKC,KAAKiB,SAASZ,MAAMa,OAC5C,MAAMI,EAASvB,EAAKC,KAAKiB,SAASK,OAAOJ,MACzC,IAAK,IAAIK,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDpB,EAAcoB,EAAUF,GACrBG,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA4B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA4B,OAAOG,QAAQ,sBAAoBxB,QAAiBC,MAAU,IAElEgB,GAASN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\n\nrefs.form.addEventListener('submit', onCreatePromiseStart);\n\nfunction onCreatePromiseStart(e) {\n  e.preventDefault();\n  const step = Number(refs.form.elements.step.value);\n  console.log(step);\n  let delay = Number(refs.form.elements.delay.value);\n  const amount = refs.form.elements.amount.value;\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  } \n}\n\nfunction createPromise(position, delay) {\n  const p = new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  );\n  return p;\n}\n\n\n\n\n\n\n\n//--------------------------------------\n// import {Notify} from 'notiflix';\n// // import \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', onSubmit);\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject)=>{\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(()=>{\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//     } else {\n//       reject({ position, delay });\n//     }\n//   }, delay);\n//   });\n// }\n\n// function onSubmit(e) {\n//   e.preventDefault();\n//   const {delay, step, amount} = e.target.elements;\n//   let delayInput = +delay.value;\n//   let stepInput = +step.value;\n//   let amountInput = +amount.value;\n\n//   for (let position = 1; position <= amountInput; position += 1) {\n//     createPromise(position, delayInput)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       })\n//     delayInput += stepInput;\n//   }\n//   e.target.reset();\n// }"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","step","Number","elements","value","console","log","delay1","amount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e9e78963.js.map"}